
Button.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000250  08000130  08000130  00001130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000380  08000388  00001388  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000380  08000380  00001388  2**0
                  CONTENTS
  4 .ARM          00000000  08000380  08000380  00001388  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000380  08000388  00001388  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000380  08000380  00001380  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000384  08000384  00001384  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00001388  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000388  00002000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000388  0000201c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00001388  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000161  00000000  00000000  000013b1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000000b4  00000000  00000000  00001512  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000048  00000000  00000000  000015c8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 0000002d  00000000  00000000  00001610  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00000f5e  00000000  00000000  0000163d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000046c  00000000  00000000  0000259b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00003bfb  00000000  00000000  00002a07  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00006602  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000058  00000000  00000000  00006648  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000059  00000000  00000000  000066a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	@ (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	@ (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	@ (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000000 	.word	0x20000000
 800014c:	00000000 	.word	0x00000000
 8000150:	08000368 	.word	0x08000368

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	@ (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	@ (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	@ (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000004 	.word	0x20000004
 800016c:	08000368 	.word	0x08000368

08000170 <main>:
#include <stdint.h>



int main(void)
{
 8000170:	b480      	push	{r7}
 8000172:	b087      	sub	sp, #28
 8000174:	af00      	add	r7, sp, #0
	/*Seta o clock no barramento APB2, para usar o GPIOC */
	uint32_t *pRCC_APB2ENR = (uint32_t*)0x40021018;
 8000176:	4b50      	ldr	r3, [pc, #320]	@ (80002b8 <main+0x148>)
 8000178:	617b      	str	r3, [r7, #20]
	 * GPIO
	 */
	// GPIOC
	// Saida
	// Seta o GPIOC para high
	uint32_t *pGPIOC_HIGH = (uint32_t*)0x40011004;
 800017a:	4b50      	ldr	r3, [pc, #320]	@ (80002bc <main+0x14c>)
 800017c:	613b      	str	r3, [r7, #16]
	// Seta o GPIOC como saida (LED)
	uint32_t *pGPIOC_OUT = (uint32_t*)0x4001100C;
 800017e:	4b50      	ldr	r3, [pc, #320]	@ (80002c0 <main+0x150>)
 8000180:	60fb      	str	r3, [r7, #12]

	// GPIOA
	// Entrada
	// Seta o GPIOA para low
	uint32_t *pGPIOA_LOW = (uint32_t*)0x40010800;
 8000182:	4b50      	ldr	r3, [pc, #320]	@ (80002c4 <main+0x154>)
 8000184:	60bb      	str	r3, [r7, #8]
	// Seta o GPIOA como entrada (botao)
	uint32_t *pGPIOA_INT = (uint32_t*)0x40010808;
 8000186:	4b50      	ldr	r3, [pc, #320]	@ (80002c8 <main+0x158>)
 8000188:	607b      	str	r3, [r7, #4]


	//1.Seta o clock para o GPIOC
	*pRCC_APB2ENR |= (1 << 4);
 800018a:	697b      	ldr	r3, [r7, #20]
 800018c:	681b      	ldr	r3, [r3, #0]
 800018e:	f043 0210 	orr.w	r2, r3, #16
 8000192:	697b      	ldr	r3, [r7, #20]
 8000194:	601a      	str	r2, [r3, #0]
	//1.Seta o clock para o GPIOA
	*pRCC_APB2ENR |= (1 << 2);
 8000196:	697b      	ldr	r3, [r7, #20]
 8000198:	681b      	ldr	r3, [r3, #0]
 800019a:	f043 0204 	orr.w	r2, r3, #4
 800019e:	697b      	ldr	r3, [r7, #20]
 80001a0:	601a      	str	r2, [r3, #0]
	 * LEDS
	*/
	//  LED 1
	//CNF13[23:22] = 00 e MODE13[21:20] = 10
	//2a. Reseta os bits [23:20]
	*pGPIOC_HIGH &= ~(15 << 20);
 80001a2:	693b      	ldr	r3, [r7, #16]
 80001a4:	681b      	ldr	r3, [r3, #0]
 80001a6:	f423 0270 	bic.w	r2, r3, #15728640	@ 0xf00000
 80001aa:	693b      	ldr	r3, [r7, #16]
 80001ac:	601a      	str	r2, [r3, #0]
	//2b. Seta o bit [21]
	*pGPIOC_HIGH |= (1 << 21);
 80001ae:	693b      	ldr	r3, [r7, #16]
 80001b0:	681b      	ldr	r3, [r3, #0]
 80001b2:	f443 1200 	orr.w	r2, r3, #2097152	@ 0x200000
 80001b6:	693b      	ldr	r3, [r7, #16]
 80001b8:	601a      	str	r2, [r3, #0]

	// LED 2
	//CNF14[27:26] = 00 e MODE14[25:24] = 10
	//2a. Reseta os bits [27:24]
	*pGPIOC_HIGH &= ~(15 << 24);
 80001ba:	693b      	ldr	r3, [r7, #16]
 80001bc:	681b      	ldr	r3, [r3, #0]
 80001be:	f023 6270 	bic.w	r2, r3, #251658240	@ 0xf000000
 80001c2:	693b      	ldr	r3, [r7, #16]
 80001c4:	601a      	str	r2, [r3, #0]
	//2b. Seta o bit [25]
	*pGPIOC_HIGH |= (1 << 25);
 80001c6:	693b      	ldr	r3, [r7, #16]
 80001c8:	681b      	ldr	r3, [r3, #0]
 80001ca:	f043 7200 	orr.w	r2, r3, #33554432	@ 0x2000000
 80001ce:	693b      	ldr	r3, [r7, #16]
 80001d0:	601a      	str	r2, [r3, #0]

	// LED 3
	//CNF12[31:30] = 00 e MODE12[29:28] = 10
	//2a. Reseta os bits [19:16]
	*pGPIOC_HIGH &= ~(15 << 28);
 80001d2:	693b      	ldr	r3, [r7, #16]
 80001d4:	681b      	ldr	r3, [r3, #0]
 80001d6:	f023 4270 	bic.w	r2, r3, #4026531840	@ 0xf0000000
 80001da:	693b      	ldr	r3, [r7, #16]
 80001dc:	601a      	str	r2, [r3, #0]
	//2b. Seta o bit [29]
	*pGPIOC_HIGH |= (1 << 29);
 80001de:	693b      	ldr	r3, [r7, #16]
 80001e0:	681b      	ldr	r3, [r3, #0]
 80001e2:	f043 5200 	orr.w	r2, r3, #536870912	@ 0x20000000
 80001e6:	693b      	ldr	r3, [r7, #16]
 80001e8:	601a      	str	r2, [r3, #0]
	 * Botoes
	*/
	//Botao 1
	//CNF0[3:2] = 01 e MODE0[1:0] = 00
	//2a. Reseta os bits [3:0]
	*pGPIOA_LOW &= ~(15 << 0);
 80001ea:	68bb      	ldr	r3, [r7, #8]
 80001ec:	681b      	ldr	r3, [r3, #0]
 80001ee:	f023 020f 	bic.w	r2, r3, #15
 80001f2:	68bb      	ldr	r3, [r7, #8]
 80001f4:	601a      	str	r2, [r3, #0]
	//2b. Seta o bit [2]
	*pGPIOA_LOW |= (1 << 2);
 80001f6:	68bb      	ldr	r3, [r7, #8]
 80001f8:	681b      	ldr	r3, [r3, #0]
 80001fa:	f043 0204 	orr.w	r2, r3, #4
 80001fe:	68bb      	ldr	r3, [r7, #8]
 8000200:	601a      	str	r2, [r3, #0]

	//Botao 2
	//CNF1[7:6] = 01 e MODE1[5:4] = 00
	//2a. Reseta os bits [7:4]
	*pGPIOA_LOW &= ~(15 << 4);
 8000202:	68bb      	ldr	r3, [r7, #8]
 8000204:	681b      	ldr	r3, [r3, #0]
 8000206:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 800020a:	68bb      	ldr	r3, [r7, #8]
 800020c:	601a      	str	r2, [r3, #0]
	//2b. Seta o bit [6]
	*pGPIOA_LOW |= (1 << 6);
 800020e:	68bb      	ldr	r3, [r7, #8]
 8000210:	681b      	ldr	r3, [r3, #0]
 8000212:	f043 0240 	orr.w	r2, r3, #64	@ 0x40
 8000216:	68bb      	ldr	r3, [r7, #8]
 8000218:	601a      	str	r2, [r3, #0]

	//Botao 2
	//CNF2[11:10] = 01 e MODE2[9:8] = 00
	//2a. Reseta os bits [9:8]
	*pGPIOA_LOW &= ~(15 << 8);
 800021a:	68bb      	ldr	r3, [r7, #8]
 800021c:	681b      	ldr	r3, [r3, #0]
 800021e:	f423 6270 	bic.w	r2, r3, #3840	@ 0xf00
 8000222:	68bb      	ldr	r3, [r7, #8]
 8000224:	601a      	str	r2, [r3, #0]
	//2b. Seta o bit [10]
	*pGPIOA_LOW |= (1 << 10);
 8000226:	68bb      	ldr	r3, [r7, #8]
 8000228:	681b      	ldr	r3, [r3, #0]
 800022a:	f443 6280 	orr.w	r2, r3, #1024	@ 0x400
 800022e:	68bb      	ldr	r3, [r7, #8]
 8000230:	601a      	str	r2, [r3, #0]



	for(;;)
	{
		uint8_t b1 = (uint8_t)(*pGPIOA_INT & 0x1);
 8000232:	687b      	ldr	r3, [r7, #4]
 8000234:	681b      	ldr	r3, [r3, #0]
 8000236:	b2db      	uxtb	r3, r3
 8000238:	f003 0301 	and.w	r3, r3, #1
 800023c:	70fb      	strb	r3, [r7, #3]
		if(b1){
 800023e:	78fb      	ldrb	r3, [r7, #3]
 8000240:	2b00      	cmp	r3, #0
 8000242:	d006      	beq.n	8000252 <main+0xe2>
			*pGPIOC_OUT |= (1<< 13);
 8000244:	68fb      	ldr	r3, [r7, #12]
 8000246:	681b      	ldr	r3, [r3, #0]
 8000248:	f443 5200 	orr.w	r2, r3, #8192	@ 0x2000
 800024c:	68fb      	ldr	r3, [r7, #12]
 800024e:	601a      	str	r2, [r3, #0]
 8000250:	e005      	b.n	800025e <main+0xee>
		}else{
			*pGPIOC_OUT &= ~(1<< 13);
 8000252:	68fb      	ldr	r3, [r7, #12]
 8000254:	681b      	ldr	r3, [r3, #0]
 8000256:	f423 5200 	bic.w	r2, r3, #8192	@ 0x2000
 800025a:	68fb      	ldr	r3, [r7, #12]
 800025c:	601a      	str	r2, [r3, #0]
		}

		uint8_t b2 = (uint8_t)(*pGPIOA_INT & 0x2);
 800025e:	687b      	ldr	r3, [r7, #4]
 8000260:	681b      	ldr	r3, [r3, #0]
 8000262:	b2db      	uxtb	r3, r3
 8000264:	f003 0302 	and.w	r3, r3, #2
 8000268:	70bb      	strb	r3, [r7, #2]
		if(b2){
 800026a:	78bb      	ldrb	r3, [r7, #2]
 800026c:	2b00      	cmp	r3, #0
 800026e:	d006      	beq.n	800027e <main+0x10e>
				*pGPIOC_OUT |= (1<< 14);
 8000270:	68fb      	ldr	r3, [r7, #12]
 8000272:	681b      	ldr	r3, [r3, #0]
 8000274:	f443 4280 	orr.w	r2, r3, #16384	@ 0x4000
 8000278:	68fb      	ldr	r3, [r7, #12]
 800027a:	601a      	str	r2, [r3, #0]
 800027c:	e005      	b.n	800028a <main+0x11a>
		}else{
				*pGPIOC_OUT &= ~(1<< 14);
 800027e:	68fb      	ldr	r3, [r7, #12]
 8000280:	681b      	ldr	r3, [r3, #0]
 8000282:	f423 4280 	bic.w	r2, r3, #16384	@ 0x4000
 8000286:	68fb      	ldr	r3, [r7, #12]
 8000288:	601a      	str	r2, [r3, #0]
		}
		uint8_t b3 = (uint8_t)(*pGPIOA_INT & 0x4);
 800028a:	687b      	ldr	r3, [r7, #4]
 800028c:	681b      	ldr	r3, [r3, #0]
 800028e:	b2db      	uxtb	r3, r3
 8000290:	f003 0304 	and.w	r3, r3, #4
 8000294:	707b      	strb	r3, [r7, #1]
		if(b3){
 8000296:	787b      	ldrb	r3, [r7, #1]
 8000298:	2b00      	cmp	r3, #0
 800029a:	d006      	beq.n	80002aa <main+0x13a>
				*pGPIOC_OUT |= (1<< 15);
 800029c:	68fb      	ldr	r3, [r7, #12]
 800029e:	681b      	ldr	r3, [r3, #0]
 80002a0:	f443 4200 	orr.w	r2, r3, #32768	@ 0x8000
 80002a4:	68fb      	ldr	r3, [r7, #12]
 80002a6:	601a      	str	r2, [r3, #0]
 80002a8:	e7c3      	b.n	8000232 <main+0xc2>
		}else{
				*pGPIOC_OUT &= ~(1<< 15);
 80002aa:	68fb      	ldr	r3, [r7, #12]
 80002ac:	681b      	ldr	r3, [r3, #0]
 80002ae:	f423 4200 	bic.w	r2, r3, #32768	@ 0x8000
 80002b2:	68fb      	ldr	r3, [r7, #12]
 80002b4:	601a      	str	r2, [r3, #0]
	{
 80002b6:	e7bc      	b.n	8000232 <main+0xc2>
 80002b8:	40021018 	.word	0x40021018
 80002bc:	40011004 	.word	0x40011004
 80002c0:	4001100c 	.word	0x4001100c
 80002c4:	40010800 	.word	0x40010800
 80002c8:	40010808 	.word	0x40010808

080002cc <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002cc:	480d      	ldr	r0, [pc, #52]	@ (8000304 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002ce:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002d0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002d4:	480c      	ldr	r0, [pc, #48]	@ (8000308 <LoopForever+0x6>)
  ldr r1, =_edata
 80002d6:	490d      	ldr	r1, [pc, #52]	@ (800030c <LoopForever+0xa>)
  ldr r2, =_sidata
 80002d8:	4a0d      	ldr	r2, [pc, #52]	@ (8000310 <LoopForever+0xe>)
  movs r3, #0
 80002da:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002dc:	e002      	b.n	80002e4 <LoopCopyDataInit>

080002de <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002de:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002e0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002e2:	3304      	adds	r3, #4

080002e4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002e4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002e6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002e8:	d3f9      	bcc.n	80002de <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002ea:	4a0a      	ldr	r2, [pc, #40]	@ (8000314 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002ec:	4c0a      	ldr	r4, [pc, #40]	@ (8000318 <LoopForever+0x16>)
  movs r3, #0
 80002ee:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002f0:	e001      	b.n	80002f6 <LoopFillZerobss>

080002f2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002f2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002f4:	3204      	adds	r2, #4

080002f6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002f6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002f8:	d3fb      	bcc.n	80002f2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002fa:	f000 f811 	bl	8000320 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002fe:	f7ff ff37 	bl	8000170 <main>

08000302 <LoopForever>:

LoopForever:
  b LoopForever
 8000302:	e7fe      	b.n	8000302 <LoopForever>
  ldr   r0, =_estack
 8000304:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 8000308:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800030c:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000310:	08000388 	.word	0x08000388
  ldr r2, =_sbss
 8000314:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000318:	2000001c 	.word	0x2000001c

0800031c <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800031c:	e7fe      	b.n	800031c <ADC1_2_IRQHandler>
	...

08000320 <__libc_init_array>:
 8000320:	b570      	push	{r4, r5, r6, lr}
 8000322:	2600      	movs	r6, #0
 8000324:	4d0c      	ldr	r5, [pc, #48]	@ (8000358 <__libc_init_array+0x38>)
 8000326:	4c0d      	ldr	r4, [pc, #52]	@ (800035c <__libc_init_array+0x3c>)
 8000328:	1b64      	subs	r4, r4, r5
 800032a:	10a4      	asrs	r4, r4, #2
 800032c:	42a6      	cmp	r6, r4
 800032e:	d109      	bne.n	8000344 <__libc_init_array+0x24>
 8000330:	f000 f81a 	bl	8000368 <_init>
 8000334:	2600      	movs	r6, #0
 8000336:	4d0a      	ldr	r5, [pc, #40]	@ (8000360 <__libc_init_array+0x40>)
 8000338:	4c0a      	ldr	r4, [pc, #40]	@ (8000364 <__libc_init_array+0x44>)
 800033a:	1b64      	subs	r4, r4, r5
 800033c:	10a4      	asrs	r4, r4, #2
 800033e:	42a6      	cmp	r6, r4
 8000340:	d105      	bne.n	800034e <__libc_init_array+0x2e>
 8000342:	bd70      	pop	{r4, r5, r6, pc}
 8000344:	f855 3b04 	ldr.w	r3, [r5], #4
 8000348:	4798      	blx	r3
 800034a:	3601      	adds	r6, #1
 800034c:	e7ee      	b.n	800032c <__libc_init_array+0xc>
 800034e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000352:	4798      	blx	r3
 8000354:	3601      	adds	r6, #1
 8000356:	e7f2      	b.n	800033e <__libc_init_array+0x1e>
 8000358:	08000380 	.word	0x08000380
 800035c:	08000380 	.word	0x08000380
 8000360:	08000380 	.word	0x08000380
 8000364:	08000384 	.word	0x08000384

08000368 <_init>:
 8000368:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800036a:	bf00      	nop
 800036c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800036e:	bc08      	pop	{r3}
 8000370:	469e      	mov	lr, r3
 8000372:	4770      	bx	lr

08000374 <_fini>:
 8000374:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000376:	bf00      	nop
 8000378:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800037a:	bc08      	pop	{r3}
 800037c:	469e      	mov	lr, r3
 800037e:	4770      	bx	lr
